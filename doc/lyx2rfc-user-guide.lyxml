<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE lyx>
<document xmlns:layout="urn:cryptonector.com:lyx-layout" xmlns:inset="urn:cryptonector.com:lyx-inset" xmlns:flex="urn:cryptonector.com:lyx-flex" xmlns:math="http://www.w3.org/1998/Math/MathML" lyxformat="413">
  <header textclass="docbook" use_default_options="true" maintain_unincluded_children="false" language="english" language_package="default" inputencoding="auto" fontencoding="global" font_roman="cmr" font_sans="cmss" font_typewriter="cmtt" font_default_family="ttdefault" use_non_tex_fonts="false" font_sc="false" font_osf="false" font_sf_scale="100" font_tt_scale="100" graphics="default" default_output_format="default" output_sync="0" bibtex_command="default" index_command="default" paperfontsize="default" spacing="single" use_hyperref="false" papersize="default" use_geometry="false" use_amsmath="1" use_esint="1" use_mhchem="1" use_mathdots="1" cite_engine="basic" use_bibtopic="false" use_indices="false" paperorientation="portrait" suppress_date="false" use_refstyle="1" secnumdepth="3" tocdepth="3" paragraph_separation="indent" paragraph_indentation="default" quotes_language="english" papercolumns="1" papersides="1" paperpagestyle="default" tracking_changes="false" output_changes="false" html_math_output="0" html_css_as_file="0">
    <local_layout>Format 31

InsetLayout Flex:PI_Strict
    LyXType Custom
    HTMLTag div
    LabelString PI_Strict
End

InsetLayout Flex:PI
    LyXType Custom
    HTMLTag div
    LabelString PI
End

InsetLayout Flex:PI_SymRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SymRefs
End

InsetLayout Flex:PI_SortRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SortRefs
End

InsetLayout Flex:PI_TOC
    LyXType Custom
    HTMLTag div
    LabelString PI_TOC
End

InsetLayout Flex:PI_TOCIndent
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCIndent
End

InsetLayout Flex:PI_TOCDepth
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCDepth
End

InsetLayout Flex:PI_TOCNarrow
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCNarrow
End

InsetLayout Flex:PI_TOCCompact
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCCompact
End

InsetLayout Flex:PI_TOCAppendix
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCAppendix
End

InsetLayout Flex:DocName
    LyXType Custom
    HTMLTag div
    LabelString DocName
End

InsetLayout Flex:IntendedStatus
    LyXType Custom
    HTMLTag div
    LabelString IntendedStatus
End

InsetLayout Flex:RFCNumber
    LyXType Custom
    HTMLTag div
    LabelString RFCNumber
End

InsetLayout Flex:IPR
    LyXType Custom
    HTMLTag div
    LabelString IPR
End

InsetLayout Flex:IETFArea
    LyXType Custom
    HTMLTag div
    LabelString IETFArea
End

InsetLayout Flex:IETFWorkingGroup
    LyXType Custom
    HTMLTag div
    LabelString IETFWorkingGroup
End

InsetLayout Flex:XML2RFCKeyword
    LyXType Custom
    HTMLTag div
    LabelString XML2RFCKeyword
End

InsetLayout Flex:TitleAbbrev
    LyXType Custom
    HTMLTag div
    LabelString TitleAbbrev
End

InsetLayout Flex:AuthorRole
    LyXType Custom
    HTMLTag div
    LabelString AuthRole
End

InsetLayout Flex:AuthorInitials
    LyXType Custom
    HTMLTag div
    LabelString AuthInitials
End

InsetLayout Flex:AuthorSurname
    LyXType Custom
    HTMLTag div
    LabelString AuthSurname
End

InsetLayout Flex:AuthorOrg
    LyXType Custom
    HTMLTag div
    LabelString AuthOrg
End

InsetLayout Flex:AuthorOrgAbbrev
    LyXType Custom
    HTMLTag div
    LabelString AuthOrgAbbrev
End

InsetLayout Flex:AuthorEmailAddr
    LyXType Custom
    HTMLTag div
    LabelString AuthEmailAddr
End

InsetLayout Flex:AuthorAddrStreet
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrStreet
End

InsetLayout Flex:AuthorAddrCity
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCity
End

InsetLayout Flex:AuthorAddrRegion
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrRegion
End

InsetLayout Flex:AuthorAddrCode
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCode
End

InsetLayout Flex:AuthorAddrCountry
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCountry
End

InsetLayout Flex:EntityXRef
    LyXType Custom
    HTMLTag div
    LabelString EntityXRef
End

InsetLayout Flex:BibXML
    LyXType Custom
    HTMLTag div
    LabelString BibXML
End
</local_layout>
    <index shortcut="idx"/>
  </header>
  <body>
    <layout:Title>A User Guide for the 'lyx2rfc' Tool for Editing Internet-Drafts with LyX
</layout:Title>
    <layout:Standard>
      <flex:DocName status="open">
        <layout:Plain Plain="Layout">lyx2rfc-user-guide
</layout:Plain>
      </flex:DocName>
      <flex:IntendedStatus status="open">
        <layout:Plain Plain="Layout">info
</layout:Plain>
      </flex:IntendedStatus>
      <flex:TitleAbbrev status="open">
        <layout:Plain Plain="Layout">LyX2RFC User Guide
</layout:Plain>
      </flex:TitleAbbrev>
      <flex:XML2RFCKeyword status="open">
        <layout:Plain Plain="Layout">Internet-Draft
</layout:Plain>
      </flex:XML2RFCKeyword>
      <flex:IPR status="open">
        <layout:Plain Plain="Layout">noDerivatives3978
</layout:Plain>
      </flex:IPR>
    </layout:Standard>
    <layout:Standard>
      <flex:PI status="open">
        <layout:Plain Plain="Layout">private="Lyx2RFC UserGuide"
</layout:Plain>
      </flex:PI>
      <flex:PI status="open">
        <layout:Plain Plain="Layout">toc="yes"
</layout:Plain>
      </flex:PI>
      <flex:PI status="open">
        <layout:Plain Plain="Layout">symrefs="yes"
</layout:Plain>
      </flex:PI>
      <flex:PI status="open">
        <layout:Plain Plain="Layout">tocindent="no"
</layout:Plain>
      </flex:PI>
      <flex:PI status="open">
        <layout:Plain Plain="Layout">comments="yes"
</layout:Plain>
      </flex:PI>
      <flex:PI status="open">
        <layout:Plain Plain="Layout">inline="yes"
</layout:Plain>
      </flex:PI>
    </layout:Standard>
    <layout:Author>Nicolas Williams 
<flex:AuthorOrg status="open"><layout:Plain Plain="Layout">Cryptonector LLC
</layout:Plain></flex:AuthorOrg>


<flex:AuthorOrgAbbrev status="open"><layout:Plain Plain="Layout">Williams
</layout:Plain></flex:AuthorOrgAbbrev>


<flex:AuthorInitials status="open"><layout:Plain Plain="Layout">N.
</layout:Plain></flex:AuthorInitials>


<flex:AuthorSurname status="open"><layout:Plain Plain="Layout">Williams
</layout:Plain></flex:AuthorSurname>


<flex:AuthorEmailAddr status="open"><layout:Plain Plain="Layout">nico@cryptonector.com
</layout:Plain></flex:AuthorEmailAddr>


</layout:Author>
    <layout:Abstract>This is the user guide for lyx2rfc, a program for converting LyX documents
 into XML in the xml2rfc schema, then formatting to text and HTML via the
 xml2rfc and related tools.
 LyX is a graphical What You See Is What You Mean (WYSIWYM) editor.
</layout:Abstract>
    <layout:Standard>
      <inset:CommandInset CommandInset="toc" LatexCommand="tableofcontents">
</inset:CommandInset>
    </layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:Internet-Drafts-and-RFCs">
</inset:CommandInset>

Internet-Drafts and RFCs
</layout:Section>
    <layout:Standard>Internet Requests For Comment (RFCs) are published by the RFC-Editor, typically
 on behalf of the Internet Engineering Task Force (IETF).
 The process involves a phase during which the RFC-to-be document is called
 an 
<inset:Quotes Quotes="eld"/>
Internet-Draft
<inset:Quotes Quotes="erd"/>
.
</layout:Standard>
    <layout:Standard>Historically Internet-Drafts and RFCs have been kept as nroff documents
 and typeset with the nroff tool.
 In recent years nroff has been mostly replaced by a tool named xml2rfc
 
<inset:CommandInset CommandInset="href" LatexCommand="href" name="(link)" target="http://xml.resource.org/">
</inset:CommandInset>

 that uses XML to represent the source to an Internet-Draft or RFC.
 See the guide to xml2rfc
<inset:CommandInset CommandInset="href" LatexCommand="href" name="(draft-mrose-writing-rfcs)" target="http://xml.resource.org/authoring/draft-mrose-writing-rfcs.html">
</inset:CommandInset>

; see also 
<flex:EntityXRef status="open"><layout:Plain Plain="Layout">RFC2629
</layout:Plain></flex:EntityXRef>

.
</layout:Standard>
    <layout:Standard>XML is a great step forward in user-friendliness -- from nroff anyways.
 But XML is not really user-friendly unless used with XML editors.
 The lyx2rfc tool is intended to allow the use of LyX, a WYSIWYM graphical
 editor, for editing Internet-Drafts and RFCs.
</layout:Standard>
    <layout:Standard>This document itself, although it is not an Internet-Draft, much less an
 RFC, is written in LyX and rendered as text and HTML using lyx2rfc.
</layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:Using-LyX-to">
</inset:CommandInset>

Using LyX to Edit Internet-Drafts
</layout:Section>
    <layout:Standard>In order to represent I-D/RFC metadata that LyX does not provide for, we
 use 
<inset:Quotes Quotes="eld"/>
custom insets
<inset:Quotes Quotes="erd"/>
.
 There are multiple custom insets, each for various purposes.
</layout:Standard>
    <layout:Standard>The first step to using LyX to edit an Internet-Draft is to start LyX and
 then use Document-&gt;Settings-&gt;Local Layout to add the 
<inset:Quotes Quotes="eld"/>
custom insets
<inset:Quotes Quotes="erd"/>
 that lyx2rfc requires: just paste them in, click on Validate, then OK.
 Alternatively start by copying the 'test-i-d.lyx' sample Internet-Draft.
 Remember to use View-&gt;Open All Insets to ensure that the inset label (the
 type of inset) is displayed.
</layout:Standard>
    <layout:Subsection>Installing LyX, DocBook SGML, Saxon, and lyx2rfc
</layout:Subsection>
    <layout:Standard>Install LyX and DocBook SGML pacakages.
 For example, on Ubuntu and most Linux systems you can install these packages:
</layout:Standard>
    <layout:Itemize>elyxer
</layout:Itemize>
    <layout:Itemize>lyx
</layout:Itemize>
    <layout:Itemize>lyx-common
</layout:Itemize>
    <layout:Itemize>ttf-lyx
</layout:Itemize>
    <layout:Itemize>docbook
</layout:Itemize>
    <layout:Itemize>docbook-dsssl
</layout:Itemize>
    <layout:Itemize>docbook-utils
</layout:Itemize>
    <layout:Itemize>docbook-xml
</layout:Itemize>
    <layout:Itemize>docbook-xsl
</layout:Itemize>
    <layout:Itemize>libsaxon-java
</layout:Itemize>
    <layout:Itemize>libsaxon-java-doc
</layout:Itemize>
    <layout:Itemize>libsaxonb-java
</layout:Itemize>
    <layout:Itemize>libsaxonb-java-doc
</layout:Itemize>
    <layout:Standard>The lyx2rfc software is currently available via git, soon to be packaged:
</layout:Standard>
    <layout:Code>git clone https://github.com/nicowilliams/lyx2rfc
</layout:Code>
    <layout:Code>cd lyx2rfc
</layout:Code>
    <layout:Code>&lt;install into a bin directory in $PATH or modify $PATH to find lyx2rfc here&gt;
</layout:Code>
    <layout:Standard>Start LyX, Tools-&gt;Reconfigure (so LyX can find DocBook SGML software).
</layout:Standard>
    <layout:Subsubsection>Configure LyX to Know lyx2rfc Conversions
</layout:Subsubsection>
    <layout:Standard>Add the following to ~/.lyx/preferences:
</layout:Standard>
    <layout:Code/>
    <layout:Code/>
    <layout:Code/>
    <layout:Code backslash="true">
format "rfchtml" "html" "RFC (HTML)" "" "firefox" "gvim" "document,menu=export"
</layout:Code>
    <layout:Code backslash="true">
format "rfctxt" "txt" "RFC (txt)" "" "" "gvim" "document,menu=export"
</layout:Code>
    <layout:Code backslash="true">
format "rfcunpg" "unpg" "RFC (unpg txt)" "" "" "gvim" "document,menu=export"
</layout:Code>
    <layout:Code backslash="true">
format "xml2rfc" "xml" "RFC (XML)" "" "" "gvim" "document,menu=export"
</layout:Code>
    <layout:Code/>
    <layout:Code/>
    <layout:Code/>
    <layout:Code backslash="true">
converter "xml2rfc" "rfchtml" "lyx2rfc $$p/$$i $$r/$$o" ""
</layout:Code>
    <layout:Code backslash="true">
converter "lyx" "xml2rfc" "lyx2rfc $$p/$$i $$r/$$o" ""
</layout:Code>
    <layout:Code backslash="true">
converter "xml2rfc" "rfctxt" "xml2rfc $$p/$$i $$r/$$o" ""
</layout:Code>
    <layout:Code backslash="true">
converter "xml2rfc" "rfcunpg" "xml2rfc $$p/$$i $$r/$$o" ""
</layout:Code>
    <layout:Standard>Restart LyX.
 You should now have additional export formats in File-&gt;Export...
 for various RFC formats.
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:LyX-Basics">
</inset:CommandInset>

LyX2 Basics
</layout:Subsection>
    <layout:Standard>In the upper left hand corner of the LyX window there is a drop-down box
 for 'style' of text.
 'Standard' here means 'paragraph'.
 Other styles include 'Title', 'Abstract', 'Section', etcetera.
 These correspond roughly to xml2rfc XML elements like 't', 'title', 'abstract',
 and 'section', but without any notion of elements containing elements.
</layout:Standard>
    <layout:Standard>For the rest, LyX is very similar to many WYSIWYG graphical editors.
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Lyx2rfc-Basics">
</inset:CommandInset>

Lyx2rfc Basics
</layout:Subsection>
    <layout:Standard>While most xml2rfc input document elements can be mapped from existing LyX
 elements trivially, some xml2rfc elements have no LyX equivalents.
 To support these elements there are 
<inset:Quotes Quotes="eld"/>
custom insets
<inset:Quotes Quotes="erd"/>
 that are added via Document-&gt;Settings-&gt;Local Layout.
 To set XML Processing Instructions (
<inset:Quotes Quotes="eld"/>
PIs
<inset:Quotes Quotes="erd"/>
) simply write &lt;pi&gt;=&lt;value&gt;, use the mouse to select that text, then Insert-&gt;Cus
tom Insets-&gt;PI.
 Several custom insets are provided as LyX equivalents of various xml2rfc
 elements not found natively in LyX.
</layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:Front-Matter">
</inset:CommandInset>

Front Matter
</layout:Section>
    <layout:Standard>All the front matter should be in the first page, although lyx2rfc does
 not actually require this.
</layout:Standard>
    <layout:Standard>The first line of the document should be set to the style of 'Title', then
 add a line below as 'Standard' where a number of custom insets will be
 added.
 A number of custom insets are REQUIRED:
</layout:Standard>
    <layout:Description>DocName This corresponds to the Internet-Draft 
<inset:Quotes Quotes="eld"/>
handle
<inset:Quotes Quotes="erd"/>
 (e.g., draft-ietf-somewg-foobar-00).
</layout:Description>
    <layout:Description>TitleAbbrev This is the abbreviation of the document title that is to appear
 at the bottom of every page (when formatted as text).
</layout:Description>
    <layout:Standard>Other custom insets related to the document itself:
</layout:Standard>
    <layout:Description>IPR This is the value of the 'ipr' attribute of the 'rfc' element (e.g., full3978).
</layout:Description>
    <layout:Description>IETFArea The IETF area that this document is specific to (e.g., 
<inset:Quotes Quotes="eld"/>
Applications
<inset:Quotes Quotes="erd"/>
).
</layout:Description>
    <layout:Description>IETFWorkingGroup The IETF Working Group (WG) that this document is specific
 to (e.g., 
<inset:Quotes Quotes="eld"/>
TLS
<inset:Quotes Quotes="erd"/>
).
</layout:Description>
    <layout:Description>IntendedStatus The intended status for the RFC that would be published from
 the Internet-Draft, if it progresses that far (e.g., 
<inset:Quotes Quotes="eld"/>
Informational
<inset:Quotes Quotes="erd"/>
).
</layout:Description>
    <layout:Description>RFCNumber RFC number.
</layout:Description>
    <layout:Description>XML2RFCKeyword Keyword element.
</layout:Description>
    <layout:Subsection>Processing Instructions
</layout:Subsection>
    <layout:Standard>The following custom insets can be used to specify xml2rfc processing instructio
ns (PIs):
</layout:Standard>
    <layout:Description>PI Formatting directive for xml2rfc.
 The text in this inset should be &lt;directive&gt;="&lt;value&gt;".
 This inset can be used to specify arbitrary PIs.
</layout:Description>
    <layout:Description>PI_SortRefs Sort references.
</layout:Description>
    <layout:Description>PI_Strict Strict PI.
</layout:Description>
    <layout:Description>PI_SymRefs Use symbolic references.
</layout:Description>
    <layout:Description>PI_TOC Generate a table of contents.
</layout:Description>
    <layout:Description>PI_TOCAppendix Include appendici in the TOC.
</layout:Description>
    <layout:Description>PI_TOCCompact Generate compact TOCs.
</layout:Description>
    <layout:Description>PI_TOCDepth Max depth of sub-sections in TOC.
</layout:Description>
    <layout:Description>PI_TOCIndent Indent TOC.
</layout:Description>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Author-Metadata">
</inset:CommandInset>

Author Information
</layout:Subsection>
    <layout:Standard>For each author start a line with Author style, write the author's name,
 then Insert-&gt;Custom Insets to insert the following custome insets:
</layout:Standard>
    <layout:Description>AuthorAddrCity City portion of postal address.
</layout:Description>
    <layout:Description>AuthorAddrCode Postal code portion of postal address.
</layout:Description>
    <layout:Description>AuthorAddrCountry Country name portion of postal address.
</layout:Description>
    <layout:Description>AuthorAddrRegion State/province portion of postal address.
</layout:Description>
    <layout:Description>AuthorAddrStreet Street portion of postal address.
</layout:Description>
    <layout:Description>AuthorEmailAddr E-mail address.
</layout:Description>
    <layout:Description>AuthorInitials Author initials.
</layout:Description>
    <layout:Description>AuthorOrg Name of author's organization.
</layout:Description>
    <layout:Description>AuthorOrgAbbrev Abbreviation of author's organization name.
</layout:Description>
    <layout:Description>AuthorRole Role of author (
<inset:Quotes Quotes="eld"/>
author
<inset:Quotes Quotes="erd"/>
 or 
<inset:Quotes Quotes="eld"/>
editor
<inset:Quotes Quotes="erd"/>
).
</layout:Description>
    <layout:Description>AuthorSurname Surname.
</layout:Description>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Abstract">
</inset:CommandInset>

Abstract
</layout:Subsection>
    <layout:Standard>Open a line below the last author line and style it 'Abstract'.
 Write your abstract.
 Use the enter key to start another abstract paragraph.
</layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:Middle-Matter">
</inset:CommandInset>

Middle Matter
</layout:Section>
    <layout:Standard>The meat of an Internet-Draft is organized into sections.
 Each section, sub-section, and sub-sub-section has a title.
 Open a line, style it 'Section', and write in the section title, then enter
 to start the contents of the section in 'Standard' (paragraph) style.
</layout:Standard>
    <layout:Subsection>Subsections
</layout:Subsection>
    <layout:Standard>Open a line and set the style to 
<inset:Quotes Quotes="eld"/>
Subsection
<inset:Quotes Quotes="erd"/>
.
</layout:Standard>
    <layout:Standard>NOTE: LyX allows subsections of no section: these are treated as subsections
 of section 0.
 lyx2rfc will ignore such subsections!
</layout:Standard>
    <layout:Subsubsection>Sub-subsections
</layout:Subsubsection>
    <layout:Standard>Open a line and set the style to 
<inset:Quotes Quotes="eld"/>
SunSubsection
<inset:Quotes Quotes="erd"/>
.
</layout:Standard>
    <layout:Standard>NOTE: LyX allows sub-subsections of no subsection: these are treated as
 sub-subsections of subsection 0.
 lyx2rfc will ignore such sub-subsections!
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Paragraphs">
</inset:CommandInset>

Paragraphs
</layout:Subsection>
    <layout:Standard>You've seen paragraphs: they're just text in 'Standard' style.
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Lists">
</inset:CommandInset>

Lists
</layout:Subsection>
    <layout:Standard>LyX supports all the sorts of lists that xml2rfc supports:
</layout:Standard>
    <layout:Itemize>numbered;
</layout:Itemize>
    <layout:Itemize>bulleted;
</layout:Itemize>
    <layout:Itemize>description lists;
</layout:Itemize>
    <layout:Itemize>nested lists.
</layout:Itemize>
    <layout:Standard>The lyx2rfc tool supports all of these.
</layout:Standard>
    <layout:Standard>Simply use in the obvious way.
</layout:Standard>
    <layout:Standard>Tip: use non-breaking spaces (Ctrl-Space) to embed spaces in the title of
 a description list entry, like so:
</layout:Standard>
    <layout:Description>Description
<inset:space space="~"/>
list A list where each list item has a title.
</layout:Description>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Figures">
</inset:CommandInset>

Figures
</layout:Subsection>
    <layout:Standard>Insert-&gt;Float-&gt;Figure, then left arrow, then Insert-&gt;Program Listing, then
 write/paste ASCII figure text.
 Don't forget to set the figure title.
</layout:Standard>
    <layout:Standard>NOTE: Every otherwise empty line of a program listing (used to hold the
 artwork) must have at least one space in it, otherwise the LyX export to
 XHTML function will fail.
</layout:Standard>
    <layout:Standard>For example:
</layout:Standard>
    <layout:Standard>
      <inset:Float Float="figure" wide="false" sideways="false" status="open">
        <layout:Plain Plain="Layout">
          <inset:listings inline="false" status="open">
            <layout:Plain Plain="Layout">
+=======+
</layout:Plain>
            <layout:Plain Plain="Layout">
| a box |
</layout:Plain>
            <layout:Plain Plain="Layout">
+=======+
</layout:Plain>
          </inset:listings>
          <inset:Caption>
            <layout:Plain Plain="Layout">Example figure
</layout:Plain>
          </inset:Caption>
        </layout:Plain>
      </inset:Float>
    </layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Tables">
</inset:CommandInset>

Tables
</layout:Subsection>
    <layout:Standard>Click on the insert table icon in the toolbar and select the table form
 (NxM).
 You may want to enable the table toolbar as well.
</layout:Standard>
    <layout:Standard>For example:
</layout:Standard>
    <layout:Standard>
      <inset:Tabular>
        <lyxtabular embedded_xml="true" version="">
          <features embedded_xml="true" tabularvalignment=""/>
          <column embedded_xml="true" alignment=""/>
          <column embedded_xml="true" alignment=""/>
          <column embedded_xml="true" alignment=""/>
          <row embedded_xml="true">
            <cell embedded_xml="true" alignment="">
              <inset:Text>
                <layout:Plain Plain="Layout">A
</layout:Plain>
              </inset:Text>
            </cell>
            <cell embedded_xml="true" alignment="">
              <inset:Text>
                <layout:Plain Plain="Layout">2x2
</layout:Plain>
              </inset:Text>
            </cell>
            <cell embedded_xml="true" alignment="">
              <inset:Text>
                <layout:Plain Plain="Layout">table
</layout:Plain>
              </inset:Text>
            </cell>
          </row>
          <row embedded_xml="true">
            <cell embedded_xml="true" alignment="">
              <inset:Text>
                <layout:Plain Plain="Layout">...
</layout:Plain>
              </inset:Text>
            </cell>
            <cell embedded_xml="true" alignment="">
              <inset:Text>
                <layout:Plain Plain="Layout">...
</layout:Plain>
              </inset:Text>
            </cell>
            <cell embedded_xml="true" alignment="">
              <inset:Text>
                <layout:Plain Plain="Layout">...
</layout:Plain>
              </inset:Text>
            </cell>
          </row>
        </lyxtabular>
      </inset:Tabular>
    </layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Intra-Document-Cross-References">
</inset:CommandInset>

Intra-Document Cross-References
</layout:Subsection>
    <layout:Standard>Here's
<series type="bold"> an
<shape type="italic"> example
<emph type="on"> of 
</emph>
</shape>
<emph type="on"><color type="blue">verily
</color><color type="red"><family type="sans"/></color><color type="blue"><family type="sans"><lang type="french">super
</lang></family><lang type="french"/></color><color type="red"><lang type="french"/> nested
</color></emph>
</series>
<emph type="on"><color type="red"/></emph>
<color type="red"/> text stylings.
</layout:Standard>
    <layout:Standard>
      <inset:Formula> $\sum x+\intop x\, dx$</inset:Formula>
    </layout:Standard>
    <layout:Standard>Use Insert-&gt;Label...
 to insert a label at strategic places, such as:
</layout:Standard>
    <layout:Itemize>in section titles
</layout:Itemize>
    <layout:Itemize>in figure titles
</layout:Itemize>
    <layout:Itemize>etcetera.
</layout:Itemize>
    <layout:Standard>To reference a label use Insert-&gt;Cross-Reference...
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Citations">
</inset:CommandInset>

Citations
</layout:Subsection>
    <layout:Standard>To reference an RFC or Internet-Draft, or any bibxml item use the EntityXRef
 custom inset (Insert-&gt;Custom Insets-&gt;EntityXRef) and set the contents of
 the inset to be the anchor of the bibxml reference (the name that would
 have to be used as the 'target' attribute value in an xml2rfc 'xref' element).
 See 
<inset:CommandInset CommandInset="ref" LatexCommand="ref" reference="sub:Adding-'bibxml'-References">
</inset:CommandInset>

 for how to add references sections.
</layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:Back-Matter">
</inset:CommandInset>

Back Matter
</layout:Section>
    <layout:Standard>Back matter consists of:
</layout:Standard>
    <layout:Itemize>Author contact information, which is derived automatically from the author
 metadata custom insets as described in 
<inset:CommandInset CommandInset="ref" LatexCommand="ref" reference="sub:Author-Metadata">
</inset:CommandInset>

;
</layout:Itemize>
    <layout:Itemize>Acknowledgements (not yet supported as back matter by lyx2rfc);
</layout:Itemize>
    <layout:Itemize>References sections;
</layout:Itemize>
    <layout:Itemize>Appendices.
</layout:Itemize>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:References-Sections">
</inset:CommandInset>

References Sections
</layout:Subsection>
    <layout:Standard>To add a references section simply create a section titled 
<inset:Quotes Quotes="eld"/>
References
<inset:Quotes Quotes="erd"/>
, 
<inset:Quotes Quotes="eld"/>
Normative References
<inset:Quotes Quotes="erd"/>
, or 
<inset:Quotes Quotes="eld"/>
Informative References
<inset:Quotes Quotes="erd"/>
.
 These must be top-level sections, but they will be put into sub-sections
 correctly.
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Adding-'bibxml'-References">
</inset:CommandInset>

Adding 'bibxml'
</layout:Subsection>
    <layout:Standard>xml2rfc can only handle references defined in its own particular schema.
 LyX's bibliography library support cannot trivially be mapped to/from the
 xml2rfc 'bibxml' library.
 Therefore lyx2rfc handles this by using LyX hyperlinks.
 Alternatively you can embed fully-formed bibxml in the EmbeddedBibXml custom
 inset.
</layout:Standard>
    <layout:Standard>To add bibxml references just start a paragraph in a references section
 and then Insert-&gt;Hyperlink, setting the link target to the URL of a bibxml
 reference and the link text to any text that is suitable for use as the
 name of an XML entity.
 E.g., to add a reference to some RFC use 'rfcXXXX' as the link text and http://xm
l.resource.org/public/rfc/bibxml/reference.RFC.XXX.xml as the link target.
</layout:Standard>
    <layout:Subsubsection>Citations
</layout:Subsubsection>
    <layout:Standard>See 
<inset:CommandInset CommandInset="ref" LatexCommand="ref" reference="sub:Citations">
</inset:CommandInset>

.
</layout:Standard>
    <layout:Subsection><inset:CommandInset CommandInset="label" LatexCommand="label" name="sub:Appendices">
</inset:CommandInset>

Appendices
</layout:Subsection>
    <layout:Standard>To add an appendix scroll to the end of your document, hit enter, then Document-
&gt;Start Appendix Here, then select the style 'Section' to set the appendix
 title.
</layout:Standard>
    <layout:Section>Oddities and Bugs
</layout:Section>
    <layout:Standard>Sections that are not references sections must not section titles that end
 in 
<inset:Quotes Quotes="eld"/>
References
<inset:Quotes Quotes="erd"/>
, while sections that are references sections must.
</layout:Standard>
    <layout:Standard>On the other hand, while xml2rfc cannot nest references sections, lyx2rfc
 does allow nesting of references sections in LyX, though it flattens them
 out in the translation to XML.
</layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:Running-the-lyx2rfc">
</inset:CommandInset>

Running the lyx2rfc Tool
</layout:Section>
    <layout:Standard>The lyx2rfc tool is a simple shell script that uses lyx(1) to export your
 LyX document as LyXHTML, then runs the Saxon XSLT processor to convert
 the document from the LyXHTML schema to the xml2rfc XML schema, then it
 applies xml2rfc and XSLT again to render as text and HTML.
</layout:Standard>
    <layout:Section><inset:CommandInset CommandInset="label" LatexCommand="label" name="sec:References">
</inset:CommandInset>

References
</layout:Section>
    <layout:Standard>
      <flex:BibXML status="open">
        <layout:Plain Plain="Layout">
          <inset:CommandInset CommandInset="href" LatexCommand="href" name="rfc2629" target="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
</inset:CommandInset>
        </layout:Plain>
      </flex:BibXML>
    </layout:Standard>
    <layout:Section start_of_appendix="true">Lyx2RFC Internals
</layout:Section>
    <layout:Standard>lyx2rfc begins by invoking LyX to export the document into LyXHTML format.
 Then lyx2rfc applies an XSL sheel with the Saxon XSLT 2.0 processor to convert
 the LyXHTML intermediate form to XML in xml2rfc's schema.
 lyx2rfc then applies xml2rfc to obtain .txt and .unpg (unpaginated .txt) output.
 Finally, lyx2rfc applies Saxon with the Greenbytes XSL for converting xml2rfc
 documents to HTML.
</layout:Standard>
  </body>
</document>
